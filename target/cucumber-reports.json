[
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1239275548,
              "status": "passed"
            },
            "line": 4,
            "name": "I have valid authentication token to access api",
            "match": {
              "location": "TestSteps.thisIsTest()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-05-04T13:23:55.222Z",
        "line": 6,
        "name": "Validate that all task for the user is retrieving successfully",
        "description": "",
        "id": "task;validate-that-all-task-for-the-user-is-retrieving-successfully",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 77145318,
              "status": "passed"
            },
            "line": 7,
            "name": "I fetch all tasks",
            "match": {
              "location": "TestSteps.useTheToken()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8264918,
              "status": "passed"
            },
            "line": 8,
            "name": "I should get the status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "CommonSteps.iShouldGetTheStatusCode(Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 81202506,
              "status": "passed"
            },
            "line": 9,
            "name": "I should receive all the tasks for the user",
            "match": {
              "location": "TestSteps.iShouldReceiveAllTheTaskNumbers()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 57280591,
              "status": "passed"
            },
            "line": 4,
            "name": "I have valid authentication token to access api",
            "match": {
              "location": "TestSteps.thisIsTest()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-05-04T13:23:56.642Z",
        "line": 19,
        "name": "Validate that the task should not be updated for the device id not found",
        "description": "",
        "id": "task;validate-that-the-task-should-not-be-updated-for-the-device-id-not-found;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 43911859,
              "status": "passed"
            },
            "line": 12,
            "name": "I update the task 1111 with the following parameters",
            "match": {
              "arguments": [
                {
                  "val": "1111",
                  "offset": 18
                }
              ],
              "location": "TestSteps.iUpdateTheTaskWithTheFollowingParameters(int,String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "title",
                  "hello test"
                ]
              },
              {
                "cells": [
                  "is_completed",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 618727,
              "status": "passed"
            },
            "line": 15,
            "name": "I should get the status code 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 29
                }
              ],
              "location": "CommonSteps.iShouldGetTheStatusCode(Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 50222030,
              "status": "passed"
            },
            "line": 4,
            "name": "I have valid authentication token to access api",
            "match": {
              "location": "TestSteps.thisIsTest()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-05-04T13:23:56.750Z",
        "line": 33,
        "name": "Validate that the task is successfully updating",
        "description": "",
        "id": "task;validate-that-the-task-is-successfully-updating;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 44059280,
              "status": "passed"
            },
            "line": 23,
            "name": "I update the task 1001 with the following parameters",
            "match": {
              "arguments": [
                {
                  "val": "1001",
                  "offset": 18
                }
              ],
              "location": "TestSteps.iUpdateTheTaskWithTheFollowingParameters(int,String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "title",
                  "hello test"
                ]
              },
              {
                "cells": [
                  "is_completed",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 447826,
              "status": "passed"
            },
            "line": 26,
            "name": "I should get the status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "CommonSteps.iShouldGetTheStatusCode(Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.assertj.core.api.SoftAssertionError: \nThe following 2 assertions failed:\n1) [Title is not updated] expected:\u003c\"[Culpa nulla suscipit sequi est beatae omnis ipsa repellat.]\"\u003e but was:\u003c\"[hello test]\"\u003e\n2) [Is completed not updated] expected:\u003c[false]\u003e but was:\u003c[\"true\"]\u003e\n\n\tat org.assertj.core.error.AssertionErrorCreator.multipleSoftAssertionsError(AssertionErrorCreator.java:100)\n\tat org.assertj.core.api.AbstractSoftAssertions.assertAll(AbstractSoftAssertions.java:37)\n\tat org.assertj.core.api.AbstractSoftAssertions.assertAll(AbstractSoftAssertions.java:42)\n\tat com.test.jet.backend.stepdefinitions.TestSteps.theTaskShouldBeUpdated(TestSteps.java:58)\n\tat âœ½.the task should be updated(file:src/test/resources/features/Task.feature:27)\n",
              "duration": 466361777,
              "status": "failed"
            },
            "line": 27,
            "name": "the task should be updated",
            "match": {
              "location": "TestSteps.theTaskShouldBeUpdated(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "title",
                  "hello test"
                ]
              },
              {
                "cells": [
                  "is_completed",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Task",
    "description": "",
    "id": "task",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/Task.feature",
    "tags": []
  }
]